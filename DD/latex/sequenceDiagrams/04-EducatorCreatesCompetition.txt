actor Educator
participant WebAppUI
participant Dashboard Manager
participant Competion Manager
participant Data Manager
participant DBMS


Educator->WebAppUI:showNewCompetitionForm()
#activate Educator
activate WebAppUI
WebAppUI-->Educator:newCompetitionForm
deactivate WebAppUI

loop until competition information are invalid
Educator->WebAppUI:createCompetition(competitionInfo)
activate WebAppUI


WebAppUI->Dashboard Manager:createCompetition(competitionInfo)
activate Dashboard Manager
Dashboard Manager->Competion Manager: createCompetition(CompetitionInfo)

activate Competion Manager
Competion Manager->Data Manager:createCompetition(CompetitionInfo)
activate Data Manager

Data Manager->DBMS:SELECT QUERY
activate DBMS
DBMS-->Data Manager:RESULT
deactivate DBMS

Data Manager-->Competion Manager:False
deactivate Data Manager
Competion Manager-->Dashboard Manager:CompetitionCannotBeCreatedException
deactivate Competion Manager

Dashboard Manager-->WebAppUI:CompetitionCannotBeCreatedException
deactivate Dashboard Manager
WebAppUI-->Educator:showErrorCompetitionNotCreated
deactivate WebAppUI

end 
activate Dashboard Manager
activate Competion Manager
activate Data Manager
activate WebAppUI

Data Manager->DBMS:INSERT QUERY
activate DBMS
DBMS-->Data Manager:RESULT
deactivate DBMS


Data Manager-->Competion Manager:True
deactivate Data Manager
Competion Manager->Data Manager:getCompetition(CompetitionInfo.name)
activate Data Manager
Data Manager->DBMS:SELECT QUERY
activate DBMS
DBMS-->Data Manager:RESULT
deactivate DBMS
Data Manager-->Competion Manager:Competition
deactivate Data Manager
Competion Manager-->Dashboard Manager:Competition
deactivate Competion Manager
Dashboard Manager-->WebAppUI:Competition
deactivate Dashboard Manager
WebAppUI-->Educator:showCreatedCompetition
deactivate WebAppUI
#deactivate Educator
else competition name already used
#activate Educator


#deactivate Educator

