actor Student

Student->WebAppUI: showEnrolledBattlesInComp()
activate Student
activate WebAppUI
WebAppUI->Dashboard Manager: getBattles(competitionId, battleInfo)
activate Dashboard Manager
Dashboard Manager->Battle Manager: searchBattle(battleInfo)
activate Battle Manager
Battle Manager->Data Manager: searchBattle(battleInfo)
activate Data Manager
Data Manager->DBMS: SELECT QUERY
activate DBMS
DBMS-->Data Manager: battles
deactivate DBMS
Data Manager-->Battle Manager: battles
deactivate Data Manager
Battle Manager-->Dashboard Manager: battles
deactivate Battle Manager
Dashboard Manager-->WebAppUI: battles
Student<--WebAppUI: show enrolled battles
Student->WebAppUI: selectBattle()
WebAppUI->WebAppUI: showBattlePage()
Student->WebAppUI: getBattleLeaderboard()
WebAppUI->Dashboard Manager: getBattleRankings(battleInfo)
Dashboard Manager->Battle Manager: getRankings(battleInfo)
activate Battle Manager
Battle Manager->Data Manager: getBattleRankings(battleInfo)
activate Data Manager
Data Manager->DBMS: SELECT QUERY
activate DBMS
DBMS-->Data Manager: rankings
deactivate DBMS
Data Manager-->Battle Manager: rankings
deactivate Data Manager
Battle Manager-->Dashboard Manager: rankings
deactivate Battle Manager
Dashboard Manager-->WebAppUI: rankings
deactivate Dashboard Manager
WebAppUI-->Student: show battle leaderboard
deactivate WebAppUI
